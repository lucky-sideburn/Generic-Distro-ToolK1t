- name: "Include conf.yml tasks"
  include_tasks: conf.yml

- name: Print that is building ARM jobs
  ansible.builtin.debug:
    msg: "Building ARM jobs"

- name: "Create Jenkins Folder"
  ansible.builtin.uri:
    url: "{{ jenkins_url }}/createItem?name={{ item | urlencode }}" 
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_token }}"
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: "application/xml"
    body: |
      <?xml version='1.1' encoding='UTF-8'?>
      <com.cloudbees.hudson.plugins.folder.Folder plugin="cloudbees-folder@6.1012.v79a_86a_1ea_c1f">
        <description></description>
        <properties/>
        <folderViews class="com.cloudbees.hudson.plugins.folder.views.DefaultFolderViewHolder">
          <views>
            <hudson.model.AllView>
              <owner class="com.cloudbees.hudson.plugins.folder.Folder" reference="../../../.."/>
              <name>All</name>
              <filterExecutors>false</filterExecutors>
              <filterQueue>false</filterQueue>
              <properties class="hudson.model.View$PropertyList"/>
            </hudson.model.AllView>
          </views>
          <tabBar class="hudson.views.DefaultViewsTabBar"/>
        </folderViews>
        <healthMetrics/>
        <icon class="com.cloudbees.hudson.plugins.folder.icons.StockFolderIcon"/>
      </com.cloudbees.hudson.plugins.folder.Folder>
    body_format: raw
    timeout: 60
  loop: "{{ jenkins_jobs.arm_folders }}"
  ignore_errors: yes
  
# CROSS TOOLCHAIN
- name: "Create Jenkins Jobs - Cross Toolchain Jobs (ARM)"
  ansible.builtin.uri:
    url: "{{ jenkins_url }}/job/arm_cross_toolchain/createItem?name={{ item.name | urlencode }}"
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_token }}"
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: "application/xml"
    body: |
      <project>
        <actions/>
        <description>Jenkins job to execute a shell command</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <scm class="hudson.scm.NullSCM"/>
        <canRoam>false</canRoam>
        <assignedNode>arm</assignedNode>
        <disabled>false</disabled>
        <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
        <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
        <triggers/>
        <concurrentBuild>false</concurrentBuild>
        <builders>
          <hudson.tasks.Shell>
        <command>
          {{ arm_common_build_start_command }}
          [ -d "{{ item.source_dir | basename }}" ] \&\& rm -rf "{{ item.source_dir | basename }}"

          if [ -d "{{ item.source_dir }}" ]; then
            cd "{{ item.source_dir }}"
          else
            echo "Directory {{ item.source_dir }} does not exist"
          fi
          pwd
          {{ item.build_command }}
        </command>
          </hudson.tasks.Shell>
        </builders>
        <publishers/>
        <buildWrappers/>
      </project>
    body_format: raw
    timeout: 60
  loop: "{{ jenkins_jobs.cross_toolchain }}"
  ignore_errors: yes

- name: "Create Jenkins Jobs - Cross Compiling Temporary Tools (ARM)"
  ansible.builtin.uri:
    url: "{{ jenkins_url }}/job/arm_cross_compiling_temporary_tools/createItem?name={{ item.name | urlencode }}"
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_token }}"
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: "application/xml"
    body: |
      <project>
        <actions/>
        <description>Jenkins job to execute a shell command</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <scm class="hudson.scm.NullSCM"/>
        <canRoam>true</canRoam>
        <assignedNode>arm</assignedNode>
        <disabled>false</disabled>
        <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
        <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
        <triggers/>
        <concurrentBuild>false</concurrentBuild>
        <builders>
          <hudson.tasks.Shell>
            <command>
              {{ arm_common_build_start_command }}
              if [ -d "{{ item.source_dir }}" ]; then
                cd "{{ item.source_dir }}"
              else
                echo "Directory {{ item.source_dir }} does not exist"
              fi
              pwd
              {{ item.build_command }}
            </command>
          </hudson.tasks.Shell>
        </builders>
        <publishers/>
        <buildWrappers/>
      </project>
    body_format: raw
    timeout: 60
  loop: "{{ jenkins_jobs.cross_compiling_temporary_tools }}"
  ignore_errors: yes

- name: "Create Jenkins Jobs - Chroot And Building Additional Temporary Tools (ARM)"
  ansible.builtin.uri:
    url: "{{ jenkins_url }}/job/arm_chroot_and_building_additional_temporary_tools/createItem?name={{ item.name | urlencode }}"
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_token }}"
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: "application/xml"
    body: |
      <project>
        <actions/>
        <description>Jenkins job to execute a shell command</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <scm class="hudson.scm.NullSCM"/>
        <canRoam>true</canRoam>
        <assignedNode>arm</assignedNode>
        <disabled>false</disabled>
        <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
        <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
        <triggers/>
        <concurrentBuild>false</concurrentBuild>
        <builders>
          <hudson.tasks.Shell>
            <command>
            BUILD_TOOL={{ item.build_tool }}
            if [ $BUILD_TOOL = "True" ]; then
              {{ item.build_command }}
            else
              {{ item.exec_command }}
            fi
            </command>
          </hudson.tasks.Shell>
        </builders>
        <publishers/>
        <buildWrappers/>
      </project>
    body_format: raw
    timeout: 60
  loop: "{{ jenkins_jobs.chroot_and_building_additional_temporary_tools }}"
  ignore_errors: yes

- name: "Create Jenkins Jobs - Basic System Software (ARM)"
  ansible.builtin.uri:
    url: "{{ jenkins_url }}/job/arm_basic_system_software/createItem?name={{ item.name | urlencode }}"
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_token }}"
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: "application/xml"
    body: |
      <project>
        <actions/>
        <description>Jenkins job to execute a shell command</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <scm class="hudson.scm.NullSCM"/>
        <canRoam>true</canRoam>
        <assignedNode>arm</assignedNode>
        <disabled>false</disabled>
        <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
        <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
        <triggers/>
        <concurrentBuild>false</concurrentBuild>
        <builders>
          <hudson.tasks.Shell>
            <command>
            BUILD_TOOL={{ item.build_tool }}
            if [ $BUILD_TOOL = "True" ]; then
              {{ item.build_command }}
            else
              {{ item.exec_command }}
            fi
            </command>
          </hudson.tasks.Shell>
        </builders>
        <publishers/>
        <buildWrappers/>
      </project>
    body_format: raw
    timeout: 60
  loop: "{{ jenkins_jobs.basic_system_software }}"
  ignore_errors: yes

- name: "Create Jenkins Jobs - Basic System Configuration (ARM)"
  ansible.builtin.uri:
    url: "{{ jenkins_url }}/job/arm_system_configuration/createItem?name={{ item.name | urlencode }}"
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_token }}"
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: "application/xml"
    body: |
      <project>
        <actions/>
        <description>Jenkins job to execute a shell command</description>
        <keepDependencies>false</keepDependencies>
        <properties/>
        <scm class="hudson.scm.NullSCM"/>
        <canRoam>true</canRoam>
        <assignedNode>arm</assignedNode>
        <disabled>false</disabled>
        <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
        <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
        <triggers/>
        <concurrentBuild>false</concurrentBuild>
        <builders>
          <hudson.tasks.Shell>
            <command>
            BUILD_TOOL={{ item.build_tool }}
            if [ $BUILD_TOOL = "True" ]; then
              {{ item.build_command }}
            else
              {{ item.exec_command }}
            fi
            </command>
          </hudson.tasks.Shell>
        </builders>
        <publishers/>
        <buildWrappers/>
      </project>
    body_format: raw
    timeout: 60
  loop: "{{ jenkins_jobs.system_configuration }}"
  ignore_errors: yes
